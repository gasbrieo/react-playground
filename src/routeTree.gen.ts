/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthedRouteImport } from './routes/_authed'
import { Route as AuthedIndexRouteImport } from './routes/_authed/index'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthedUsersRouteImport } from './routes/_authed/users'
import { Route as AuthedProductsRouteImport } from './routes/_authed/products'

const AuthedRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedIndexRoute = AuthedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedUsersRoute = AuthedUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedProductsRoute = AuthedProductsRouteImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => AuthedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/products': typeof AuthedProductsRoute
  '/users': typeof AuthedUsersRoute
  '/auth/login': typeof AuthLoginRoute
  '/': typeof AuthedIndexRoute
}
export interface FileRoutesByTo {
  '/products': typeof AuthedProductsRoute
  '/users': typeof AuthedUsersRoute
  '/auth/login': typeof AuthLoginRoute
  '/': typeof AuthedIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authed': typeof AuthedRouteWithChildren
  '/_authed/products': typeof AuthedProductsRoute
  '/_authed/users': typeof AuthedUsersRoute
  '/auth/login': typeof AuthLoginRoute
  '/_authed/': typeof AuthedIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/products' | '/users' | '/auth/login' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/products' | '/users' | '/auth/login' | '/'
  id:
    | '__root__'
    | '/_authed'
    | '/_authed/products'
    | '/_authed/users'
    | '/auth/login'
    | '/_authed/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthedRoute: typeof AuthedRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/': {
      id: '/_authed/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthedIndexRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/users': {
      id: '/_authed/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthedUsersRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/products': {
      id: '/_authed/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AuthedProductsRouteImport
      parentRoute: typeof AuthedRoute
    }
  }
}

interface AuthedRouteChildren {
  AuthedProductsRoute: typeof AuthedProductsRoute
  AuthedUsersRoute: typeof AuthedUsersRoute
  AuthedIndexRoute: typeof AuthedIndexRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedProductsRoute: AuthedProductsRoute,
  AuthedUsersRoute: AuthedUsersRoute,
  AuthedIndexRoute: AuthedIndexRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthedRoute: AuthedRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
