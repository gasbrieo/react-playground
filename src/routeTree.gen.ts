/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PrivateRouteRouteImport } from './routes/_private/route'
import { Route as PrivateIndexRouteImport } from './routes/_private/index'
import { Route as PrivateUsersRouteImport } from './routes/_private/users'
import { Route as PrivateProductsRouteImport } from './routes/_private/products'

const PrivateRouteRoute = PrivateRouteRouteImport.update({
  id: '/_private',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivateIndexRoute = PrivateIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PrivateRouteRoute,
} as any)
const PrivateUsersRoute = PrivateUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => PrivateRouteRoute,
} as any)
const PrivateProductsRoute = PrivateProductsRouteImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => PrivateRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/products': typeof PrivateProductsRoute
  '/users': typeof PrivateUsersRoute
  '/': typeof PrivateIndexRoute
}
export interface FileRoutesByTo {
  '/products': typeof PrivateProductsRoute
  '/users': typeof PrivateUsersRoute
  '/': typeof PrivateIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_private': typeof PrivateRouteRouteWithChildren
  '/_private/products': typeof PrivateProductsRoute
  '/_private/users': typeof PrivateUsersRoute
  '/_private/': typeof PrivateIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/products' | '/users' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/products' | '/users' | '/'
  id:
    | '__root__'
    | '/_private'
    | '/_private/products'
    | '/_private/users'
    | '/_private/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PrivateRouteRoute: typeof PrivateRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_private/': {
      id: '/_private/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PrivateIndexRouteImport
      parentRoute: typeof PrivateRouteRoute
    }
    '/_private/users': {
      id: '/_private/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof PrivateUsersRouteImport
      parentRoute: typeof PrivateRouteRoute
    }
    '/_private/products': {
      id: '/_private/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof PrivateProductsRouteImport
      parentRoute: typeof PrivateRouteRoute
    }
  }
}

interface PrivateRouteRouteChildren {
  PrivateProductsRoute: typeof PrivateProductsRoute
  PrivateUsersRoute: typeof PrivateUsersRoute
  PrivateIndexRoute: typeof PrivateIndexRoute
}

const PrivateRouteRouteChildren: PrivateRouteRouteChildren = {
  PrivateProductsRoute: PrivateProductsRoute,
  PrivateUsersRoute: PrivateUsersRoute,
  PrivateIndexRoute: PrivateIndexRoute,
}

const PrivateRouteRouteWithChildren = PrivateRouteRoute._addFileChildren(
  PrivateRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  PrivateRouteRoute: PrivateRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
